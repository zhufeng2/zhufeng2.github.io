<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>逐风的博客</title>
  
  <subtitle>Forward</subtitle>
  <link href="https://www.zhufengblog.com/atom.xml" rel="self"/>
  
  <link href="https://www.zhufengblog.com/"/>
  <updated>2021-03-12T15:34:55.933Z</updated>
  <id>https://www.zhufengblog.com/</id>
  
  <author>
    <name>逐风</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>爬虫入门1</title>
    <link href="https://www.zhufengblog.com/2021/03/11/python%E7%88%AC%E8%99%AB-%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A81/"/>
    <id>https://www.zhufengblog.com/2021/03/11/python%E7%88%AC%E8%99%AB-%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A81/</id>
    <published>2021-03-11T15:58:59.000Z</published>
    <updated>2021-03-12T15:34:55.933Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需要注意的地方">需要注意的地方</h2><p>首先我们知道在使用爬虫的时候必须遵守其合法性，例如，别人的个人隐私信息，还有网站规定了不能爬取的内容,例如在淘宝中：</p><div align = "center"><img src="https://cdn.jsdelivr.net/gh/zhufeng2/image//image/image.png"/></div><p>robots.txt表明了哪些信息能够爬取，哪些信息是不能够爬取的。</p><p>但是自己还是要衡量一下，避免违反法律。</p><h2 id="爬虫实战分析">爬虫实战分析</h2><h3 id="简易的网页采集器">简易的网页采集器</h3><p>首先，我们是对搜狗网页的html源码进行了爬取，这个实例较简单，我们可以通过这个分析爬虫工作的原理。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests <span class="token comment">#python中urllib包已经被涵盖在requests内，因此不需单独导入</span>url <span class="token operator">=</span> <span class="token string">"https://www.sogou.com/"</span> <span class="token comment"># 向url中传入字符串，以便于后面的请求</span>rsepond <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token comment"># 这里我们处理的是get请求，这个看具体的网站而定，有时是post请求</span><span class="token keyword">print</span><span class="token punctuation">(</span>respond<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><p>如图所示的是一个get请求：</p><p><img src="https://cdn.jsdelivr.net/gh/zhufeng2/image//image/image%20(1).png" alt=""></p><p>但是我们的网页采集器还是需要进行完善的。<br />第一个完善的是请求头需改成浏览器的请求头，这里就可以伪装成浏览器请求网站，是最简单的一种反反爬虫的策略。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token string">'user-Agent'</span> <span class="token operator">=</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36"</span></code></pre><span id="more"></span><p>第二个改进就是根据用户输入的关键字来进行页面抓取：</p><p><img src="https://cdn.jsdelivr.net/gh/zhufeng2/image//image/image%20(2).png" alt=""></p><p>我们发现关键字的抓取是根据关键字query来获得页面的。</p><pre class="language-python" data-language="python"><code class="language-python">get<span class="token punctuation">(</span>url<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">bytes</span><span class="token punctuation">]</span><span class="token punctuation">,</span> params<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Mapping<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></code></pre><p>requests.get()中的关键字params就指定了这些特定的抓取内容，并且该关键字传入的是一个字典类型的数据。<br />最后一个优化就是采集的数据我们是需要存储的，利用python的文件操作我们可以实现这一点。<br />最后实现源码改进：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests <span class="token comment">#python中urllib包已经被涵盖在requests内，因此不需单独导入</span>headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'user-Agent'</span> <span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36"</span><span class="token punctuation">&#125;</span>url <span class="token operator">=</span> <span class="token string">"https://www.sogou.com/"</span> <span class="token comment"># 向url中传入字符串，以便于后面的请求</span>kw <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"please input a key words:"</span><span class="token punctuation">)</span>param <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'query'</span><span class="token punctuation">:</span> kw<span class="token punctuation">&#125;</span>respond <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> params <span class="token operator">=</span> param<span class="token punctuation">,</span> headers <span class="token operator">=</span> headers <span class="token punctuation">)</span> <span class="token comment"># 这里我们处理的是get请求，这个看具体的网站而定，有时是post请求</span>filename <span class="token operator">=</span> kw <span class="token operator">+</span><span class="token string">'.html'</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>    fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>respond<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><h3 id="百度翻译请求">百度翻译请求</h3><p><img src="https://i.loli.net/2021/03/12/pS6muKMdTbPc39k.gif" alt="1.gif"></p><p>我们注意到浏览器只是部分元素发生了改变，所以这里可能是发起了一个请求，然后服务器按照你发出的请求返回了一串数据.</p><p><img src="https://cdn.jsdelivr.net/gh/zhufeng2/image//image/image%20(3).png" alt=""></p><p>我们对浏览器进行查看是一个post请求，并且我们进一步查看：<br><img src="https://cdn.jsdelivr.net/gh/zhufeng2/image//image/image%20(4).png" alt=""></p><p>发现content-type返回了一串json数据，这串json数据被解析后应该就是翻译结果。目前发现百度翻译的请求网站已经看不到了，所以这里直接给出请求网站，我们需要做的就是爬取，解析，存储json数据。<br>实现代码如下所示:</p><p><img src="https://cdn.jsdelivr.net/gh/zhufeng2/image//image/image%20(5).png" alt=""></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> json headers <span class="token operator">=</span><span class="token punctuation">&#123;</span> <span class="token string">'user-Agent'</span> <span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML,like Gecko) Chrome/88.0.4324.190 Safari/537.36"</span><span class="token punctuation">&#125;</span> url <span class="token operator">=</span> <span class="token string">'https://fanyi.baidu.com/sug'</span><span class="token comment"># 我们分析网页可以得到是一个data类型</span>word <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input a word:'</span><span class="token punctuation">)</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'kw'</span><span class="token punctuation">:</span>word<span class="token punctuation">&#125;</span>respond <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span> data <span class="token operator">=</span> data<span class="token punctuation">,</span> headers <span class="token operator">=</span> headers<span class="token punctuation">)</span>dic_obj <span class="token operator">=</span> respond<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic_obj<span class="token punctuation">)</span></code></pre><p><img src="https://i.loli.net/2021/03/12/1IgDn4fa5jK7mWE.png" alt=""></p><h3 id="练习作业：爬取kfc官网餐厅的座位信息">练习作业：爬取kfc官网餐厅的座位信息</h3><p><img src="https://cdn.jsdelivr.net/gh/zhufeng2/image//image/image%20(7).png" alt=""></p><p>通过对网站的请求分析，content-type是一个text类型文件，并且是是个post请求，我们继续分析关键词：</p><p><img src="https://cdn.jsdelivr.net/gh/zhufeng2/image//image/image%20(8).png" alt=""></p><p>发现了keyword, pageindex, pageSize等关键词信息。我们再次查看响应的信息：</p><p><img src="https://cdn.jsdelivr.net/gh/zhufeng2/image//image/image%20(9).png" alt=""></p><p>发现响应信息类似于json文件，到此为止，我们对这个网站的基本信息就有了了解，实现代码如下：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> jsonurl <span class="token operator">=</span> <span class="token string">'http://www.kfc.com.cn/kfccda/ashx/GetStoreList.ashx?op=keyword'</span>headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36'</span><span class="token punctuation">&#125;</span>city <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"please input a city:"</span><span class="token punctuation">)</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'cname'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token string">'pid'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token string">'keyword'</span><span class="token punctuation">:</span> city<span class="token punctuation">,</span>    <span class="token string">'pageIndex'</span><span class="token punctuation">:</span> i<span class="token punctuation">,</span>    <span class="token string">'pageSize'</span><span class="token punctuation">:</span> <span class="token string">'10'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>respond <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span>data <span class="token operator">=</span> data<span class="token punctuation">,</span> headers <span class="token operator">=</span> headers<span class="token punctuation">)</span><span class="token comment"># text不是字符串类型不能直接写入文件，需要利用json.dump()</span>text <span class="token operator">=</span> respond<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#print(text)</span><span class="token comment"># 'a'在文件后面写入，不改变文件原来的样子，只在后面进行补充</span>fp <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./kfc.json'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>text<span class="token punctuation">,</span> fp <span class="token operator">=</span> fp<span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'信息爬取并存储完成'</span><span class="token punctuation">)</span></code></pre><p>补充：content-type文件类型：</p><p><img src="https://cdn.jsdelivr.net/gh/zhufeng2/image//image/image%20(10).png" alt=""></p><p><a href="https://zhuanlan.zhihu.com/p/129057481">https://zhuanlan.zhihu.com/p/129057481</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;需要注意的地方&quot;&gt;需要注意的地方&lt;/h2&gt;
&lt;p&gt;首先我们知道在使用爬虫的时候必须遵守其合法性，例如，别人的个人隐私信息，还有网站规定了不能爬取的内容,例如在淘宝中：&lt;/p&gt;
&lt;div align = &quot;center&quot;&gt;
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/zhufeng2/image//image/image.png&quot;/&gt;
&lt;/div&gt;
&lt;p&gt;robots.txt表明了哪些信息能够爬取，哪些信息是不能够爬取的。&lt;/p&gt;
&lt;p&gt;但是自己还是要衡量一下，避免违反法律。&lt;/p&gt;
&lt;h2 id=&quot;爬虫实战分析&quot;&gt;爬虫实战分析&lt;/h2&gt;
&lt;h3 id=&quot;简易的网页采集器&quot;&gt;简易的网页采集器&lt;/h3&gt;
&lt;p&gt;首先，我们是对搜狗网页的html源码进行了爬取，这个实例较简单，我们可以通过这个分析爬虫工作的原理。&lt;/p&gt;
&lt;pre class=&quot;language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; requests &lt;span class=&quot;token comment&quot;&gt;#python中urllib包已经被涵盖在requests内，因此不需单独导入&lt;/span&gt;
url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://www.sogou.com/&quot;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# 向url中传入字符串，以便于后面的请求&lt;/span&gt;
rsepond &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; requests&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;get&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# 这里我们处理的是get请求，这个看具体的网站而定，有时是post请求&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;respond&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如图所示的是一个get请求：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/zhufeng2/image//image/image%20(1).png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;但是我们的网页采集器还是需要进行完善的。&lt;br /&gt;第一个完善的是请求头需改成浏览器的请求头，这里就可以伪装成浏览器请求网站，是最简单的一种反反爬虫的策略。&lt;/p&gt;
&lt;pre class=&quot;language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#39;user-Agent&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="python爬虫" scheme="https://www.zhufengblog.com/categories/python%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="爬虫入门系列" scheme="https://www.zhufengblog.com/tags/%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>个人博客网站配置</title>
    <link href="https://www.zhufengblog.com/2021/03/06/python%E5%9F%BA%E7%A1%80-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E9%85%8D%E7%BD%AE/"/>
    <id>https://www.zhufengblog.com/2021/03/06/python%E5%9F%BA%E7%A1%80-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E9%85%8D%E7%BD%AE/</id>
    <published>2021-03-05T16:11:45.000Z</published>
    <updated>2021-03-12T10:12:14.859Z</updated>
    
    <content type="html"><![CDATA[<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>\oiint</mo><mi>E</mi><mi>d</mi><mi>S</mi><mo>=</mo><mfrac><mi>q</mi><msub><mi>ε</mi><mn>0</mn></msub></mfrac></mrow><annotation encoding="application/x-tex">\oiint E dS =\frac{q}{\varepsilon_0} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.222em;vertical-align:-0.862em;"></span><span class="mop vlist-t vlist-t2" style="position:relative;top:-0.0010000000000000564em;"><span class="vlist-r"><span class="vlist" style="height:1.3599999999999999em;"><span style="top:-3.3600000000000003em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;">∬</span></span><span style="top:-3.2800000000000002em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="overlay" style="height:0.659em;width:1.472em;"><svg width='1.472em' height='0.659em' style='width:1.472em' viewBox='0 0 1472 659' preserveAspectRatio='xMinYMin'><path d='M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230zm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2c0 110 84 276 504 276s502.4-166 502.4-276z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.862em;"><span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.94356em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ε</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo>=</mo><mfrac><mrow><mo>∑</mo><msub><mi>m</mi><mi>i</mi></msub><mover accent="true"><mi>r</mi><mo>⃗</mo></mover></mrow><mrow><mo>∑</mo><msub><mi>m</mi><mi>i</mi></msub></mrow></mfrac><mspace linebreak="newline"></mspace><mo>∑</mo><msub><mi>m</mi><mi>i</mi></msub><msub><mover accent="true"><mi>r</mi><mo>⃗</mo></mover><mi>i</mi></msub><mo>=</mo><mo>∑</mo><msub><mi>m</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><mover accent="true"><mi>R</mi><mo>⃗</mo></mover><mo>−</mo><msub><mover accent="true"><mi>r</mi><mo>⃗</mo></mover><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">R=\frac{\sum m_{i} \vec{r}}{\sum m_{i}}\\\sum m_{i} \vec{r}_{i}=\sum m_{i}\left(\vec{R}-\vec{r}_{i}\right)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.36301em;vertical-align:-0.93601em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.17994em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93601em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.6000100000000002em;vertical-align:-0.55001em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.17994em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.15216em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.17994em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;bloc</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>git</title>
    <link href="https://www.zhufengblog.com/2021/02/23/python%E5%9F%BA%E7%A1%80-git/"/>
    <id>https://www.zhufengblog.com/2021/02/23/python%E5%9F%BA%E7%A1%80-git/</id>
    <published>2021-02-23T12:09:00.000Z</published>
    <updated>2021-03-05T17:18:43.311Z</updated>
    
    <content type="html"><![CDATA[<h1>git基本操作</h1><p>为了方便操作，我们说一下git bash的快捷键，<code>ctrl+insert</code>是复制，<code>shift+insert</code> 是粘贴</p><h2 id="创建一个本地仓库和远程仓库连接的完整步骤">创建一个本地仓库和远程仓库连接的完整步骤</h2><ol><li>在GitHub上创建一个新的Repositories</li><li>在本地创建一个文件夹，名字为仓库名，打开文件夹，创建 README.md文件。</li><li>接下来就可以git bash了，在仓库文件夹的根目录下依次执行如下命令</li></ol><span id="more"></span><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init //初始化<span class="token function">git</span> <span class="token function">add</span> README.md // 添加文件到版本库（只是添加到缓存区），.代表添加文件夹下所有文件 <span class="token function">git</span> commit -m <span class="token string">"first commit"</span> // 把添加的文件提交到版本库，并填写提交备注<span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/github用户名/仓库名.git  //把本地库与远程库关联<span class="token function">git</span> push -u origin master  //推送本地仓库到远程库</code></pre><h2 id="已经存在的本地仓库推送到远程库">已经存在的本地仓库推送到远程库</h2><p>此时的操作相对简单一点</p><pre class="language-bash" data-language="bash"><code class="language-bash">//修改本地文件后，git <span class="token function">bash</span> here<span class="token function">git</span> commit -m <span class="token string">"first commit"</span> -a<span class="token function">git</span> push origin master</code></pre><p>出现如下样子即表示上传成功</p><div  align="center">     <img src="https://i.loli.net/2021/02/12/DgaVIzHQycq7Pdf.png" width = "500" height = "200" alt="图片名称" /></div>]]></content>
    
    
    <summary type="html">&lt;h1&gt;git基本操作&lt;/h1&gt;
&lt;p&gt;为了方便操作，我们说一下git bash的快捷键，&lt;code&gt;ctrl+insert&lt;/code&gt;是复制，&lt;code&gt;shift+insert&lt;/code&gt; 是粘贴&lt;/p&gt;
&lt;h2 id=&quot;创建一个本地仓库和远程仓库连接的完整步骤&quot;&gt;创建一个本地仓库和远程仓库连接的完整步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在GitHub上创建一个新的Repositories&lt;/li&gt;
&lt;li&gt;在本地创建一个文件夹，名字为仓库名，打开文件夹，创建 README.md文件。&lt;/li&gt;
&lt;li&gt;接下来就可以git bash了，在仓库文件夹的根目录下依次执行如下命令&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="git" scheme="https://www.zhufengblog.com/categories/git/"/>
    
    
    <category term="git" scheme="https://www.zhufengblog.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>变量和字符串的使用</title>
    <link href="https://www.zhufengblog.com/2021/02/12/python%E5%9F%BA%E7%A1%80-%E5%8F%98%E9%87%8F%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://www.zhufengblog.com/2021/02/12/python%E5%9F%BA%E7%A1%80-%E5%8F%98%E9%87%8F%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2021-02-12T06:26:14.000Z</published>
    <updated>2021-02-23T13:59:16.902Z</updated>
    
    <content type="html"><![CDATA[<h1>变量和字符串的使用</h1><h2 id="变量">变量</h2><p><strong>变量的命名需要注意的事项</strong></p><ol><li>变量名只能包含字母，数字和下划线</li><li>不能包含空格</li><li>不能将python的关键字或者函数名作变量名</li></ol><h2 id="字符串">字符串</h2><p>用单引号或者双引号包含在其中</p><p>字符串常用的操作：</p><span id="more"></span><p><img src="https://i.loli.net/2021/02/12/K3CseQruV61MDTB.png" alt=""></p><p>需要注意的一点：用+时，不能把int型和str型的数据加到一起，否则会报错，例如23，因为python无法理解到底是字符2和3还是23，我们可以定义为str型这样就可以使用+和其他的str型数据连接到一起了，<code>str(23)</code></p>]]></content>
    
    
    <summary type="html">&lt;h1&gt;变量和字符串的使用&lt;/h1&gt;
&lt;h2 id=&quot;变量&quot;&gt;变量&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;变量的命名需要注意的事项&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;变量名只能包含字母，数字和下划线&lt;/li&gt;
&lt;li&gt;不能包含空格&lt;/li&gt;
&lt;li&gt;不能将python的关键字或者函数名作变量名&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;字符串&quot;&gt;字符串&lt;/h2&gt;
&lt;p&gt;用单引号或者双引号包含在其中&lt;/p&gt;
&lt;p&gt;字符串常用的操作：&lt;/p&gt;</summary>
    
    
    
    <category term="python语法基础" scheme="https://www.zhufengblog.com/categories/python%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python语法基础" scheme="https://www.zhufengblog.com/tags/python%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>函数和模块的作用</title>
    <link href="https://www.zhufengblog.com/2021/02/12/python%E5%9F%BA%E7%A1%80-%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%9C%E7%94%A8/"/>
    <id>https://www.zhufengblog.com/2021/02/12/python%E5%9F%BA%E7%A1%80-%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%9C%E7%94%A8/</id>
    <published>2021-02-12T06:24:16.000Z</published>
    <updated>2021-02-24T09:54:27.232Z</updated>
    
    <content type="html"><![CDATA[<h1>函数和模块的作用</h1><h2 id="定义阶乘函数：">定义阶乘函数：</h2><pre class="language-python" data-language="python"><code class="language-python"> <span class="token comment"># 求阶乘  </span><span class="token keyword">def</span> <span class="token function">fac</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>   result <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        result <span class="token operator">*=</span> n    <span class="token keyword">return</span> result</code></pre><p>虽然math模块中的阶乘函数已经被定义了–factorial</p><h2 id="定义详解">定义详解</h2><span id="more"></span><h3 id="默认参数和关键字参数">默认参数和关键字参数</h3><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">ask_ok</span><span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> retries <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span>remenber <span class="token operator">=</span> <span class="token string">'Please tyr again!'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>While <span class="token boolean">True</span><span class="token punctuation">:</span><span class="token keyword">if</span> ok <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> <span class="token string">'ye'</span><span class="token punctuation">,</span> <span class="token string">'yes'</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">return</span> <span class="token boolean">True</span><span class="token keyword">if</span> ok <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token string">'n'</span><span class="token punctuation">,</span><span class="token string">' '</span>no<span class="token string">', '</span>none'<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">return</span> <span class="token boolean">False</span>retries <span class="token operator">=</span> retries<span class="token operator">-</span><span class="token number">1</span><span class="token keyword">if</span> retries <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span><span class="token comment"># raise语句为了引发异常下面这一句要是</span>        单独运行的话结果是‘ValueError：invailid user response’<span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">'invailid user response'</span><span class="token punctuation">)</span></code></pre><p>后两个参数为默认参数，第一个为关键字参数</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">cheeseshop</span><span class="token punctuation">(</span>kind<span class="token punctuation">,</span> <span class="token operator">*</span>arguments<span class="token punctuation">,</span> <span class="token operator">**</span>keywords<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"-- Do you have any"</span><span class="token punctuation">,</span> kind<span class="token punctuation">,</span> <span class="token string">"?"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"-- I'm sorry, we're all out of"</span><span class="token punctuation">,</span> kind<span class="token punctuation">)</span>    <span class="token keyword">for</span> arg <span class="token keyword">in</span> arguments<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"-"</span> <span class="token operator">*</span> <span class="token number">40</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> kw <span class="token keyword">in</span> keywords<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>kw<span class="token punctuation">,</span> <span class="token string">":"</span><span class="token punctuation">,</span> keywords<span class="token punctuation">[</span>kw<span class="token punctuation">]</span><span class="token punctuation">)</span>cheeseshop<span class="token punctuation">(</span><span class="token string">"Limburger"</span><span class="token punctuation">,</span> <span class="token string">"It's very runny, sir."</span><span class="token punctuation">,</span>           <span class="token string">"It's really very, VERY runny, sir."</span><span class="token punctuation">,</span>           shopkeeper<span class="token operator">=</span><span class="token string">"Michael Palin"</span><span class="token punctuation">,</span>           client<span class="token operator">=</span><span class="token string">"John Cleese"</span><span class="token punctuation">,</span>           sketch<span class="token operator">=</span><span class="token string">"Cheese Shop Sketch"</span><span class="token punctuation">)</span><span class="token comment"># *name 形参接收一个 元组，该元组包含形参列表之外的位置参数</span></code></pre><p>输出结果分析： Limburger传递给kind，*arguments 需要传递一个元组，**keywords需要传递字典，所以最终的输出结果为：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">-</span><span class="token operator">-</span> Do you have <span class="token builtin">any</span> Limburger ?<span class="token operator">-</span><span class="token operator">-</span> I<span class="token string">'m sorry, we'</span>re <span class="token builtin">all</span> out of LimburgerIt's very runny<span class="token punctuation">,</span> sir<span class="token punctuation">.</span>It's really very<span class="token punctuation">,</span> VERY runny<span class="token punctuation">,</span> sir<span class="token punctuation">.</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>shopkeeper <span class="token punctuation">:</span> Michael Palinclient <span class="token punctuation">:</span> John Cleesesketch <span class="token punctuation">:</span> Cheese Shop Sketch</code></pre><p>/ 和 * 是可选的。这些符号表明形参如何把参数值传递给函数：位置、位置或关键字、关键字。关键字形参也叫作命名形参。</p><h2 id="用模块管理函数">用模块管理函数</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hello, world!'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'goodbye, world!'</span><span class="token punctuation">)</span><span class="token comment"># 下面的代码会输出什么呢？</span>foo<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>其实上面的方法我们是很容易避免的</p><p>只需要在两个文件中把相应的函数写好，每个文件相当于一个模块</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> mudule1 <span class="token keyword">import</span> foo<span class="token punctuation">(</span><span class="token punctuation">)</span>foo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">from</span> modele2 <span class="token keyword">import</span> foo<span class="token punctuation">(</span><span class="token punctuation">)</span>foo<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>这样就不会区分不开了，也可以用下面的方式：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> module1 <span class="token keyword">as</span> m1<span class="token keyword">import</span> module2 <span class="token keyword">as</span> m2m1<span class="token punctuation">.</span>foo<span class="token punctuation">(</span><span class="token punctuation">)</span>m2<span class="token punctuation">.</span>foo<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h2 id="变量的作用域">变量的作用域</h2><p>在函数中定义的变量是局部变量，在函数之外定义的变量是全局变量</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a<span class="token operator">=</span><span class="token number">100</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>a<span class="token operator">=</span><span class="token number">200</span>foo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token comment">#输出结果为200，因为200为全局变量</span></code></pre><h2 id="需要注意的细节：">需要注意的细节：</h2><ul><li>用空行分隔函数和类，及函数内较大的代码块。</li><li>最好把注释放到单独一行。</li><li>使用文档字符串。</li><li>运算符前后、逗号后要用空格，但不要直接在括号内使用： <code>a = f(1, 2) + g(3, 4)</code>。</li><li>类和函数的命名要一致；按惯例，命名类用 <code>UpperCamelCase</code>，命名函数与方法用 <code>lowercase_with_underscores</code>。命名方法中第一个参数总是用 <code>self</code> (类和方法详见 <a href="https://docs.python.org/zh-cn/3/tutorial/classes.html#tut-firstclasses">初探类</a>)。</li><li>编写用于国际多语环境的代码时，不要用生僻的编码。Python 默认的 UTF-8 或纯 ASCII 可以胜任各种情况。</li><li>同理，就算多语阅读、维护代码的可能再小，也不要在标识符中使用非 ASCII 字符。</li></ul><h2 id="备注：">备注：</h2><p>hashable:一个对象的哈希值如果在其生命周期类不发生改变，那么就称这个值为可哈希，可变容器如列表，字典都是不可哈希，不可变容器：例如元组当且仅当他们的元素均是可哈希的时候才是可哈希的</p>]]></content>
    
    
    <summary type="html">&lt;h1&gt;函数和模块的作用&lt;/h1&gt;
&lt;h2 id=&quot;定义阶乘函数：&quot;&gt;定义阶乘函数：&lt;/h2&gt;
&lt;pre class=&quot;language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt; &lt;span class=&quot;token comment&quot;&gt;# 求阶乘  &lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fac&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;num&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;   
	result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;    
	&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; n &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; num &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;        
		result &lt;span class=&quot;token operator&quot;&gt;*=&lt;/span&gt; n    
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; result&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;虽然math模块中的阶乘函数已经被定义了–factorial&lt;/p&gt;
&lt;h2 id=&quot;定义详解&quot;&gt;定义详解&lt;/h2&gt;</summary>
    
    
    
    <category term="python语法基础" scheme="https://www.zhufengblog.com/categories/python%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python语法基础" scheme="https://www.zhufengblog.com/tags/python%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>numpy数组入门</title>
    <link href="https://www.zhufengblog.com/2021/02/12/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97-numpy%E6%95%B0%E7%BB%84%E5%85%A5%E9%97%A8/"/>
    <id>https://www.zhufengblog.com/2021/02/12/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97-numpy%E6%95%B0%E7%BB%84%E5%85%A5%E9%97%A8/</id>
    <published>2021-02-12T06:08:29.000Z</published>
    <updated>2021-02-23T13:55:42.736Z</updated>
    
    <content type="html"><![CDATA[<h1>numpy入门</h1><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment">#创建一个指定维数的数组</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npa<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token comment">#对数组进行切片处理，获取第一，二列</span>sub_a<span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>sub_a<span class="token punctuation">)</span></code></pre><p>对数组的值进行修改，则直接赋值运算即可。如果不想改变原来的值，只是对这个数组进行一点点的修改<br>则直接调用copy函数：</p><span id="more"></span><pre class="language-python" data-language="python"><code class="language-python">sub_aa<span class="token operator">=</span>np<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#然后对sub_aa中的值进行直接的赋值修改</span><span class="token keyword">print</span><span class="token punctuation">(</span>sub_aa<span class="token punctuation">)</span></code></pre><p>reshape函数的操作：<br>reshape和np.reshape的语法会有一点区别</p><pre class="language-python" data-language="python"><code class="language-python">b<span class="token operator">=</span>np<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#numpy package中的reshape函数用法</span><span class="token comment">#转换为一维数组的操作</span>c<span class="token operator">=</span>b<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>c<span class="token operator">=</span>b<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>c<span class="token operator">=</span>b<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span>c<span class="token operator">=</span>b<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>数组之间的连接：hstack,vstack</p><pre class="language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>水平连接c<span class="token operator">=</span>np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#垂直连接</span>d<span class="token operator">=</span>np<span class="token punctuation">.</span>vstack<span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>concatenate函数，参数axis,二维情况下axis=0 ，1，三维情况下aixs=0，1，2</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment">#reshape第一个参数代表几个，</span>第二个参数代表行，第三个参数代表列a<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>b<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">113</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>r_3<span class="token operator">=</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">#此时得到的结果是两个两行六列的数组</span>r_4<span class="token operator">=</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1&gt;numpy入门&lt;/h1&gt;
&lt;pre class=&quot;language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#创建一个指定维数的数组&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; np
a&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;reshape&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;#对数组进行切片处理，获取第一，二列&lt;/span&gt;
sub_a&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sub_a&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;对数组的值进行修改，则直接赋值运算即可。如果不想改变原来的值，只是对这个数组进行一点点的修改&lt;br&gt;
则直接调用copy函数：&lt;/p&gt;</summary>
    
    
    
    <category term="python科学计算" scheme="https://www.zhufengblog.com/categories/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="numpy基础" scheme="https://www.zhufengblog.com/tags/numpy%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>artist对象</title>
    <link href="https://www.zhufengblog.com/2021/02/12/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97-artist%E5%AF%B9%E8%B1%A1/"/>
    <id>https://www.zhufengblog.com/2021/02/12/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97-artist%E5%AF%B9%E8%B1%A1/</id>
    <published>2021-02-12T06:04:45.000Z</published>
    <updated>2021-02-23T13:54:13.770Z</updated>
    
    <content type="html"><![CDATA[<h1>matplotlib绘图</h1><h2 id="如何绘制多个子图：">如何绘制多个子图：</h2><p>两个函数，<code>subplot</code>和<code>subplots</code>：<code>fig, axes = plt.subplots(23)：</code>即表示一次性在figure上创建成2*3的网格，使用<code>plt.subplot()</code>只能一个一个的添加。<br>代码示例：</p><pre class="language-python" data-language="python"><code class="language-python">fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">231</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">232</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">233</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">234</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">235</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">236</span><span class="token punctuation">)</span></code></pre><h2 id="支持中文">支持中文</h2><span id="more"></span><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: gbk -*-</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>pylab <span class="token keyword">import</span> mplmpl<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.family'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'SimHei'</span><span class="token comment"># 指定默认字体</span>mpl<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span> <span class="token comment"># 解决保存图像是负号'-'显示为方块的问题</span></code></pre><p><img src="https://i.loli.net/2021/02/12/egMaRHwBvbdEJ3o.png" alt=""></p><h2 id="artist属性">artist属性</h2><blockquote><p>alpha : 透明度，值在0到1之间，0为完全透明，1为完全不透明<br>animated : 布尔值，在绘制动画效果时使用<br>axes : 此Artist对象所在的Axes对象，可能为None<br>clip_box : 对象的裁剪框<br>clip_on : 是否裁剪<br>clip_path : 裁剪的路径<br>contains : 判断指定点是否在对象上的函数<br>figure : 所在的Figure对象，可能为None<br>label : 文本标签<br>picker : 控制Artist对象选取<br>transform : 控制偏移旋转<br>visible : 是否可见<br>zorder : 控制绘图顺序</p></blockquote><h2 id="Axeis容器">Axeis容器</h2><p>Axis 容器包括坐标轴上的刻度线、刻度文本、坐标网格以及坐标轴标题等内容。</p>]]></content>
    
    
    <summary type="html">&lt;h1&gt;matplotlib绘图&lt;/h1&gt;
&lt;h2 id=&quot;如何绘制多个子图：&quot;&gt;如何绘制多个子图：&lt;/h2&gt;
&lt;p&gt;两个函数，&lt;code&gt;subplot&lt;/code&gt;和&lt;code&gt;subplots&lt;/code&gt;：&lt;code&gt;fig, axes = plt.subplots(23)：&lt;/code&gt;即表示一次性在figure上创建成2*3的网格，使用&lt;code&gt;plt.subplot()&lt;/code&gt;只能一个一个的添加。&lt;br&gt;
代码示例：&lt;/p&gt;
&lt;pre class=&quot;language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;fig &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; plt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;figure&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
ax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; plt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;subplot&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;231&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
ax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; plt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;subplot&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;232&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
ax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; plt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;subplot&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;233&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
ax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; plt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;subplot&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;234&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
ax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; plt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;subplot&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;235&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
ax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; plt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;subplot&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;236&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;支持中文&quot;&gt;支持中文&lt;/h2&gt;</summary>
    
    
    
    <category term="python科学计算" scheme="https://www.zhufengblog.com/categories/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="matploylib绘图" scheme="https://www.zhufengblog.com/tags/matploylib%E7%BB%98%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>列表</title>
    <link href="https://www.zhufengblog.com/2021/02/12/python%E5%9F%BA%E7%A1%80-%E5%88%97%E8%A1%A8/"/>
    <id>https://www.zhufengblog.com/2021/02/12/python%E5%9F%BA%E7%A1%80-%E5%88%97%E8%A1%A8/</id>
    <published>2021-02-11T17:03:20.000Z</published>
    <updated>2021-02-23T13:59:50.355Z</updated>
    
    <content type="html"><![CDATA[<h1>列表</h1><h2 id="列表的定义">列表的定义</h2><p>列表在c语言当中和数组类似，不过表示方法是有区别</p><pre class="language-python" data-language="python"><code class="language-python">bycle<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">]</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>bycle<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#打印的第一个元素</span><span class="token keyword">print</span><span class="token punctuation">(</span>bycle<span class="token punctuation">)</span>  <span class="token comment">#打印全部的元素</span></code></pre><h2 id="修改添加和删除元素">修改添加和删除元素</h2><span id="more"></span><pre class="language-python" data-language="python"><code class="language-python">motocycles<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'substraction'</span><span class="token punctuation">,</span><span class="token string">'addent'</span><span class="token punctuation">,</span><span class="token string">'factoriol'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>motocycles<span class="token punctuation">)</span>motocycles<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'instrument'</span><span class="token keyword">print</span><span class="token punctuation">(</span>motocycles<span class="token punctuation">)</span>  <span class="token comment">#此时第一个元素就被替换掉了</span>motocycles<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'bicycles'</span><span class="token punctuation">)</span>  <span class="token comment">#append是在末尾添加元素</span>motocycles<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'book'</span><span class="token punctuation">)</span>  <span class="token comment">#在第1个元素插入，其他的元素全部后移一位</span><span class="token keyword">del</span> motocycles<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment">#删除第一个元素</span></code></pre><p>弹出一些元素</p><pre class="language-python" data-language="python"><code class="language-python">motocycles<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'China'</span><span class="token punctuation">,</span><span class="token string">'Amarica'</span><span class="token punctuation">,</span><span class="token string">'Russia'</span><span class="token punctuation">]</span>new<span class="token operator">=</span>motocycle<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">#.pop()去除最后一个元素</span><span class="token keyword">print</span><span class="token punctuation">(</span>new<span class="token punctuation">)</span>  <span class="token comment">#这样就是去除的第二个元素</span></code></pre><p>如果不知道位置想要删除对应的元素</p><pre class="language-python" data-language="python"><code class="language-python">motocycles<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'China'</span><span class="token punctuation">,</span><span class="token string">'Amarica'</span><span class="token punctuation">,</span><span class="token string">'Russia'</span><span class="token punctuation">]</span>motocycles<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">'Amarica'</span><span class="token punctuation">)</span>  <span class="token comment">#如果有多个，一下只能删除第一个，全部删除的话要用到循环</span></code></pre><h2 id="组织列表">组织列表</h2><h3 id="sort排序和sorted临时排序">sort排序和sorted临时排序</h3><pre class="language-python" data-language="python"><code class="language-python">cars<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'China'</span><span class="token punctuation">,</span><span class="token string">'Russia'</span><span class="token punctuation">,</span><span class="token string">'Amarica'</span><span class="token punctuation">]</span>cars<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#按顺序打出</span><span class="token keyword">print</span><span class="token punctuation">(</span>cars<span class="token punctuation">)</span>cars<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span>ture<span class="token punctuation">)</span>    <span class="token comment">#按字母的逆序打出</span><span class="token keyword">print</span><span class="token punctuation">(</span>cars<span class="token punctuation">)</span>cars<span class="token punctuation">.</span><span class="token builtin">sorted</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#临时排序</span><span class="token keyword">print</span><span class="token punctuation">(</span>cars<span class="token punctuation">)</span>   <span class="token comment">#按字母的顺序打出</span><span class="token keyword">print</span><span class="token punctuation">(</span>cars<span class="token punctuation">)</span>   <span class="token comment">#又恢复了原样</span>cars<span class="token punctuation">.</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>reverse<span class="token operator">=</span>ture<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cars<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cars<span class="token punctuation">)</span></code></pre><h3 id="倒着打印列表以及确定列表的长度">倒着打印列表以及确定列表的长度</h3><p>reverse（）不是指的按字母逆序，就是单纯的逆序而已</p><pre class="language-python" data-language="python"><code class="language-python">cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'china'</span><span class="token punctuation">,</span><span class="token string">'amarica'</span><span class="token punctuation">,</span><span class="token string">'klala'</span><span class="token punctuation">]</span>cars<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cars<span class="token punctuation">)</span><span class="token comment">#确定列表的长度</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span>cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'v'</span><span class="token punctuation">,</span><span class="token string">'v'</span><span class="token punctuation">]</span><span class="token builtin">len</span><span class="token punctuation">(</span>cars<span class="token punctuation">)</span></code></pre><h2 id="操作列表">操作列表</h2><h3 id="一般的遍历列表">一般的遍历列表</h3><pre class="language-python" data-language="python"><code class="language-python">squares <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> square <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    squares<span class="token punctuation">.</span>append<span class="token punctuation">(</span>square<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>squares<span class="token punctuation">)</span></code></pre><h3 id="列表解析">列表解析</h3><pre class="language-python" data-language="python"><code class="language-python">squares <span class="token operator">=</span> <span class="token punctuation">[</span>value<span class="token operator">**</span><span class="token number">2</span> <span class="token keyword">for</span> value <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>squares<span class="token punctuation">)</span></code></pre><h3 id="列表的切片">列表的切片</h3><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tom'</span><span class="token punctuation">,</span><span class="token string">''</span>paul<span class="token string">','</span>sahara<span class="token string">','</span>li'<span class="token punctuation">]</span><span class="token comment">#访问全部元素</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><h3 id="列表的复制">列表的复制</h3><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tom'</span><span class="token punctuation">,</span><span class="token string">''</span>paul<span class="token string">','</span>sahara<span class="token string">','</span>li'<span class="token punctuation">]</span>name_2 <span class="token operator">=</span> name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>name_2<span class="token punctuation">)</span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1&gt;列表&lt;/h1&gt;
&lt;h2 id=&quot;列表的定义&quot;&gt;列表的定义&lt;/h2&gt;
&lt;p&gt;列表在c语言当中和数组类似，不过表示方法是有区别&lt;/p&gt;
&lt;pre class=&quot;language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;bycle&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;1&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;  
&lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bycle&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;#打印的第一个元素&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bycle&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;#打印全部的元素&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;修改添加和删除元素&quot;&gt;修改添加和删除元素&lt;/h2&gt;</summary>
    
    
    
    <category term="python语法基础" scheme="https://www.zhufengblog.com/categories/python%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python语法基础" scheme="https://www.zhufengblog.com/tags/python%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>初见网络爬虫</title>
    <link href="https://www.zhufengblog.com/2021/02/12/python%E7%88%AC%E8%99%AB-%E5%88%9D%E8%A7%81%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/"/>
    <id>https://www.zhufengblog.com/2021/02/12/python%E7%88%AC%E8%99%AB-%E5%88%9D%E8%A7%81%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/</id>
    <published>2021-02-11T17:02:39.000Z</published>
    <updated>2021-02-23T13:57:57.216Z</updated>
    
    <content type="html"><![CDATA[<h1>初见网络爬虫</h1><h2 id="网络连接">网络连接</h2><p>给出一个简单的例子来说明网络连接的原理</p><ol><li>小红有一台服务器，小明有一台台式电脑</li><li>小明的台式电脑发送请求头和消息体到小红的服务器，请求头包含小明现在路由器上的mac地址和小红的IP地址</li><li>小明的本地路由器收到信息后把信息理解成数据包发送出去</li><li>小明的数据游历了中介服务器，找到了小红的服务器</li><li>小红的服务器收到了请求信息，并对此做出处理，返回到小明的路由器，然后路由器把信息传递到小明的台式机器</li></ol><span id="more"></span><h2 id="BeautifulSoup简介">BeautifulSoup简介</h2><p>这是一个最简单的网络爬虫代码</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>request <span class="token keyword">import</span> urlopen<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSouphtml <span class="token operator">=</span> urlopen<span class="token punctuation">(</span><span class="token string">'相应的网址'</span><span class="token punctuation">)</span>bsobj <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>bsobj<span class="token punctuation">.</span>h1<span class="token punctuation">)</span></code></pre><h3 id="BeautifulSoup解析HTML网页">BeautifulSoup解析HTML网页</h3><p><code>&lt;head&gt;&lt;/head&gt;</code>,<code>&lt;title&gt;&lt;/title&gt;</code>,<code>&lt;body&gt;&lt;h1&gt;&lt;p&gt;&lt;/p&gt;&lt;/h1&gt;&lt;/body&gt;</code></p><h3 id="BeautifulSoup的findAll-和find">BeautifulSoup的findAll()和find()</h3><p><code>finfAll(tag,attributes,recurstive,text,limit,keywords)</code><br><code>find(tag,attributes,recurstive,text,limit=1(一级标签),keywords)</code></p><pre class="language-python" data-language="python"><code class="language-python">namelist <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">"span"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"class"</span><span class="token punctuation">:</span><span class="token string">"green"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">for</span> name <span class="token keyword">in</span> namelist<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>可以发现页面中所有的带有span标签，用get_text获取的是标签里面的文本，而平常我们是需要把标签一起获取的。<br>获取含有标签的内容去掉<code>.get_text</code>就行</p><p>这里给一下我自己练习时的代码</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> urllib<span class="token keyword">from</span> urllib <span class="token keyword">import</span> requesthtml <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">'https://developer.mozilla.org/zh-CN/docs/learn'</span><span class="token punctuation">)</span>bsobj <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>namelist <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>findAll<span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"class"</span><span class="token punctuation">:</span><span class="token string">"summary"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">for</span> name <span class="token keyword">in</span> namelist<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>“欢迎来到 MDN 学习区。本系列文章旨在为 Web 开发的纯粹初学者提供一切开始编写简单网站所需的知识。”</p><p>经过网页源码检查，确实只有这一段文字满足标签<code>&lt;p class=&quot;summary&quot;&gt;........&lt;/p&gt;</code></p><p><strong>通过keywords查找</strong></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> urllib<span class="token keyword">from</span> urllib <span class="token keyword">import</span> requesthtml <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">'https://sc.chinaz.com/tupian/'</span><span class="token punctuation">)</span>bsobj <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>namelist <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>findAll<span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token keyword">for</span> name <span class="token keyword">in</span> namelist<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span></code></pre><p>返回数据</p><pre class="language-none"><code class="language-none">&lt;img alt&#x3D;&quot;彩色羽毛图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;bpic22425_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;郊区沥青公路图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic2.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;bpic22426_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;洁白荷花荷叶图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;bpic22427_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;两只灵长类猴子图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic1.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;bpic22428_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;树干上休息的老鹰图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic3.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;bpic22429_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;营养红皮洋葱图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic2.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;bpic22430_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;石洞小鸟休憩图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic3.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202101&#x2F;apic30634_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;个性长发帅哥图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic2.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202101&#x2F;apic30638_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;亚洲精品美女模特图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic1.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202101&#x2F;apic30636_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;高楼林立图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic3.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202101&#x2F;apic30637_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;高颜值美女人体写真图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202101&#x2F;apic30633_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;经典亚洲现代美女图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic1.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202101&#x2F;apic30635_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;复古音乐录音带图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202101&#x2F;hpic3559_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;黑色背景上的雪花片图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic1.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202101&#x2F;hpic3560_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;情人节包装纸包装礼物图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202101&#x2F;hpic3561_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;世界预防艾滋病日宣传图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202101&#x2F;hpic3562_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;手戴戒指的图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic2.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202101&#x2F;hpic3563_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;下雪天情侣相拥图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic3.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202101&#x2F;hpic3564_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;2021跨年夜图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic2.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;apic30728_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;素颜黑人美女图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;apic30673_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;情人节快乐主题图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic2.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;apic30672_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;黑色皮短裙丝袜美女图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;apic30674_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;录影师帅哥工作图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic2.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202101&#x2F;apic30632_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;2021年牛年福字图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;apic30724_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;黑色橡胶轮胎图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;bpic22420_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;长颈鹿吃草图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic2.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;bpic22419_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;文学书籍素材图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic2.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;bpic22422_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;咖啡豆特写摄影图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;bpic22421_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;夜晚璀璨灯光图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic2.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;bpic22423_s.jpg&quot;&#x2F;&gt;&lt;img alt&#x3D;&quot;紫色鸢尾花朵图片&quot; src2&#x3D;&quot;&#x2F;&#x2F;scpic3.chinaz.net&#x2F;Files&#x2F;pic&#x2F;pic9&#x2F;202102&#x2F;bpic22424_s.jpg&quot;&#x2F;&gt;</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1&gt;初见网络爬虫&lt;/h1&gt;
&lt;h2 id=&quot;网络连接&quot;&gt;网络连接&lt;/h2&gt;
&lt;p&gt;给出一个简单的例子来说明网络连接的原理&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;小红有一台服务器，小明有一台台式电脑&lt;/li&gt;
&lt;li&gt;小明的台式电脑发送请求头和消息体到小红的服务器，请求头包含小明现在路由器上的mac地址和小红的IP地址&lt;/li&gt;
&lt;li&gt;小明的本地路由器收到信息后把信息理解成数据包发送出去&lt;/li&gt;
&lt;li&gt;小明的数据游历了中介服务器，找到了小红的服务器&lt;/li&gt;
&lt;li&gt;小红的服务器收到了请求信息，并对此做出处理，返回到小明的路由器，然后路由器把信息传递到小明的台式机器&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="python爬虫" scheme="https://www.zhufengblog.com/categories/python%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="python爬虫" scheme="https://www.zhufengblog.com/tags/python%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>sublime text3配置LaTex</title>
    <link href="https://www.zhufengblog.com/2021/02/12/latex-sublime-text3%E9%85%8D%E7%BD%AELaTex/"/>
    <id>https://www.zhufengblog.com/2021/02/12/latex-sublime-text3%E9%85%8D%E7%BD%AELaTex/</id>
    <published>2021-02-11T17:01:06.000Z</published>
    <updated>2021-02-23T14:00:30.683Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LaTex-基本功能的配置">LaTex 基本功能的配置</h2><p>国外的 sublime 的官网访问速度很慢，建议访问国内的镜像网站，</p><p><a href="http://www.sublimetext.cn/3">http://www.sublimetext.cn/3</a></p><p>虽然仍然很慢，但是还可以接受。</p><h3 id="下载安装-sublime-tex-3">下载安装 sublime tex 3</h3><span id="more"></span><p>这里安装的过程我就不讲了。</p><h3 id="下载安装-MikTex">下载安装 MikTex</h3><p>这里也可以用 texlive，但是 sublime 中默认的是 miktex，操作起来也会更加简便。</p><h3 id="安装-LaTex-Tools-插件">安装 LaTex Tools 插件</h3><p>由于 <a href="https://packagecontrol.io/">https://packagecontrol.io/</a> 容易被墙，访问不稳定，所以需要将 Sublime Text 安装插件的地址改为中文镜像的地址：</p><p>第一步：通过控制台安装插件代码，通过 <code>ctrl_+_</code>或<code>View _&gt;_ Show Console</code> 打开控制台，将 Python 代码粘贴到控制台，回车。</p><p>Sublime Text3</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">,</span>os<span class="token punctuation">,</span>hashlib<span class="token punctuation">;</span> h <span class="token operator">=</span> <span class="token string">'6f4c264a24d933ce70df5dedcf1dcaee'</span> <span class="token operator">+</span> <span class="token string">'ebe013ee18cced0ef93d5f746d80ef60'</span><span class="token punctuation">;</span> pf <span class="token operator">=</span> <span class="token string">'Package Control.sublime-package'</span><span class="token punctuation">;</span> ipp <span class="token operator">=</span> sublime<span class="token punctuation">.</span>installed_packages_path<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>install_opener<span class="token punctuation">(</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>build_opener<span class="token punctuation">(</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>ProxyHandler<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> by <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span> <span class="token string">'http://packagecontrol.cn/'</span> <span class="token operator">+</span> pf<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">'%20'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> dh <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>sha256<span class="token punctuation">(</span>by<span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">print</span><span class="token punctuation">(</span>'Error validating download <span class="token punctuation">(</span>got <span class="token operator">%</span>s instead of <span class="token operator">%</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> please <span class="token keyword">try</span> manual install<span class="token string">' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), '</span>wb' <span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>by<span class="token punctuation">)</span></code></pre><p>Sublime Text2</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib2<span class="token punctuation">,</span>os<span class="token punctuation">,</span>hashlib<span class="token punctuation">;</span> h <span class="token operator">=</span> <span class="token string">'6f4c264a24d933ce70df5dedcf1dcaee'</span> <span class="token operator">+</span> <span class="token string">'ebe013ee18cced0ef93d5f746d80ef60'</span><span class="token punctuation">;</span> pf <span class="token operator">=</span> <span class="token string">'Package Control.sublime-package'</span><span class="token punctuation">;</span> ipp <span class="token operator">=</span> sublime<span class="token punctuation">.</span>installed_packages_path<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span> ipp <span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>ipp<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token boolean">None</span><span class="token punctuation">;</span> urllib2<span class="token punctuation">.</span>install_opener<span class="token punctuation">(</span> urllib2<span class="token punctuation">.</span>build_opener<span class="token punctuation">(</span> urllib2<span class="token punctuation">.</span>ProxyHandler<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> by <span class="token operator">=</span> urllib2<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span> <span class="token string">'http://packagecontrol.cn/'</span> <span class="token operator">+</span> pf<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">'%20'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> dh <span class="token operator">=</span>  hashlib<span class="token punctuation">.</span>sha256<span class="token punctuation">(</span>by<span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token builtin">open</span><span class="token punctuation">(</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span> ipp<span class="token punctuation">,</span> pf<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'wb'</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>by<span class="token punctuation">)</span> <span class="token keyword">if</span> dh <span class="token operator">==</span> h <span class="token keyword">else</span> <span class="token boolean">None</span><span class="token punctuation">;</span> <span class="token keyword">print</span><span class="token punctuation">(</span>'Error validating  download <span class="token punctuation">(</span>got <span class="token operator">%</span>s instead of <span class="token operator">%</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> please <span class="token keyword">try</span> manual  install<span class="token string">' % (dh, h) if dh != h else '</span>Please restart Sublime Text to finish installation'<span class="token punctuation">)</span></code></pre><p>第二步：修改 Sublime Text 插件 channels，方法如下：</p><ol><li>打开 package control 配置文件</li><li>修改 channels 地址：</li></ol><p><img src="https://pic1.zhimg.com/v2-80d7ef6506cff9042fe5fc422b7d9f9c_r.jpg" alt=""></p><p>在右边输入：</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token property">"channels"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"http://packagecontrol.cn/channel_v3.json"</span><span class="token punctuation">]</span><span class="token punctuation">,</span></code></pre><p>注意 https 要改为右边所示的 http，否则会出现 “There are no packages available for installation”<br>现在就可以在线下载 package 了<br>同时按下 <code>SHIFT+CTRL+P</code>，出现如图所示的样子，就证明你可以下载 package 了：</p><p><img src="https://pic3.zhimg.com/v2-40af588c894dcecd41a542967f2a679e_r.jpg" alt=""></p><p>直接搜索 LaTex Tools，然后过一段时间，就下载完了。</p><h3 id="将-SumatraPDF-添加到环境变量">将 SumatraPDF 添加到环境变量</h3><p>将其文件路径加入到系统的环境变量，这样 sublime 才能调用 SumatraPDF<br><img src="https://pic1.zhimg.com/v2-f316249d2060abd9f47606ada62992ac_r.jpg" alt=""><br>注意路径后面要打英文的分号</p><p>具体环境变量方法可参考：<br><a href="https://link.zhihu.com/?target=https%3A//jingyan.baidu.com/article/47a29f24610740c0142399ea.html">https://jingyan.baidu.com/article/47a29f24610740c0142399ea.html​jingyan.baidu.com</a><br>这样就可以使用 sublime text 编译 latex 文件了。最后在讲一下一点点的优化方案。</p><h3 id="公式预览">公式预览</h3><p>我们以 Mixtex 为例子，默认还没有下载 mathtools 和 preview 这两个 package<br><img src="https://pic1.zhimg.com/v2-d631c9b8eaa510d7fa3fc37b09ff5f88_r.jpg" alt=""><br>在这个页面下载。</p><p>然后下载<br><a href="https://ghostscript.com/download.html">Ghostscript</a><br>直接安装就好。之后我们就可以预览公式了，效果如图所示：</p><p><img src="https://pic4.zhimg.com/v2-d34e02411ba97d32dd16d77e013edf57_r.jpg" alt=""></p><h3 id="自动补全">自动补全</h3><p><img src="https://pic2.zhimg.com/v2-7102ed6d680a6cd20d658e1b50223791_r.jpg" alt=""></p><p>下载这个插件就可以了。</p><p>基本的配置就讲完了，希望可以帮助到你。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;LaTex-基本功能的配置&quot;&gt;LaTex 基本功能的配置&lt;/h2&gt;
&lt;p&gt;国外的 sublime 的官网访问速度很慢，建议访问国内的镜像网站，&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.sublimetext.cn/3&quot;&gt;http://www.sublimetext.cn/3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;虽然仍然很慢，但是还可以接受。&lt;/p&gt;
&lt;h3 id=&quot;下载安装-sublime-tex-3&quot;&gt;下载安装 sublime tex 3&lt;/h3&gt;</summary>
    
    
    
    <category term="latex" scheme="https://www.zhufengblog.com/categories/latex/"/>
    
    
    <category term="latex配置" scheme="https://www.zhufengblog.com/tags/latex%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>vscode中配置latex</title>
    <link href="https://www.zhufengblog.com/2021/02/12/latex-vscode%E4%B8%AD%E9%85%8D%E7%BD%AElatex/"/>
    <id>https://www.zhufengblog.com/2021/02/12/latex-vscode%E4%B8%AD%E9%85%8D%E7%BD%AElatex/</id>
    <published>2021-02-11T17:00:25.000Z</published>
    <updated>2021-02-23T14:00:01.332Z</updated>
    
    <content type="html"><![CDATA[<p>这几天发现sublime text预览公式的一个严重问题，当公式太长的时候，gs会一直报错，然后就算我不想预览了，只想继续打公式的时候，还是不断弹窗,严重影响我的使用体验，于是准备转vs code，之前还犹豫是否有公式预览功能，看了LaTexworkshop的官方文档后，发现其实是有公式的预览功能的，于是决定转vs code</p><span id="more"></span><h2 id="vs-code中配置LaTex">vs code中配置LaTex</h2><p>在vs code中配置LaTex并不复杂，如果你下载的是texlive，那么只需要将texlive加入到环境变量中，然后安装latexworkshop，其实理论上执行完上述步骤之后，就可以编译latex文件了，就用默认的配置比较好。</p><p>但是如果你用的是mixtex，执行完上述步骤之后会报错，原因是缺少一样东西，直接去官网下载就好：<a href="https://strawberryperl.com/">https://strawberryperl.com/</a>,这里建议最好不要修改安装路径，默认安装，后期出现问题的几率才更小。然后就可以编译LaTex文档了。</p><h2 id="公式预览">公式预览</h2><p>在打完公式后想要确认有没有问题，只需要将鼠标悬停在公式开始处即可。</p><h2 id="公式环境下的快捷键">公式环境下的快捷键</h2><p>这里给出几个例子</p><div align="center"><img src ="https://i.loli.net/2021/02/12/JC1HvNr3s7uecFU.png"/></div><p>如需了解更详细的信息，请到官网查看相应的快捷键：<a href="https://github.com/James-Yu/LaTeX-Workshop/wiki/Snippets#Inserting-Greek-letters">链接</a></p><h2 id="一些优化">一些优化</h2><p>其实在vscode上的自动补全效果还是很好的，这样在latex中很多的重复命令直接省略了，这样以来也是可以很大的提高latex编译的效率的。<br>在每次编译完latex文件后，为了使文件夹更加简洁，我们把一些暂时不会用到的文件删除掉，对应的配置如下。</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token property">"latex-workshop.latex.autoBuild.run"</span><span class="token operator">:</span> <span class="token string">"never"</span><span class="token punctuation">,</span><span class="token property">"latex-workshop.latex.autoClean.run"</span><span class="token operator">:</span> <span class="token string">"onBuilt"</span><span class="token punctuation">,</span><span class="token property">"latex-workshop.latex.clean.fileTypes"</span><span class="token operator">:</span> <span class="token punctuation">[</span>       <span class="token string">"*.aux"</span><span class="token punctuation">,</span>       <span class="token string">"*.bbl"</span><span class="token punctuation">,</span>       <span class="token string">"*.blg"</span><span class="token punctuation">,</span>       <span class="token string">"*.idx"</span><span class="token punctuation">,</span>       <span class="token string">"*.ind"</span><span class="token punctuation">,</span>       <span class="token string">"*.lof"</span><span class="token punctuation">,</span>       <span class="token string">"*.lot"</span><span class="token punctuation">,</span>       <span class="token string">"*.out"</span><span class="token punctuation">,</span>       <span class="token string">"*.toc"</span><span class="token punctuation">,</span>       <span class="token string">"*.acn"</span><span class="token punctuation">,</span>       <span class="token string">"*.acr"</span><span class="token punctuation">,</span>       <span class="token string">"*.alg"</span><span class="token punctuation">,</span>       <span class="token string">"*.glg"</span><span class="token punctuation">,</span>       <span class="token string">"*.glo"</span><span class="token punctuation">,</span>       <span class="token string">"*.gls"</span><span class="token punctuation">,</span>       <span class="token string">"*.ist"</span><span class="token punctuation">,</span>       <span class="token string">"*.fls"</span><span class="token punctuation">,</span>       <span class="token string">"*.log"</span><span class="token punctuation">,</span>       <span class="token string">"*.fdb_latexmk"</span></code></pre><p>今天的关于如何在vscode中配置latex就讲到这里，以后有什么对插件配置优化方案也会持续更新！</p><p>主要就是详细的阅读latex-workshop的官方文档，里面有许多的使用方法和一些很方便的功能，</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这几天发现sublime text预览公式的一个严重问题，当公式太长的时候，gs会一直报错，然后就算我不想预览了，只想继续打公式的时候，还是不断弹窗,严重影响我的使用体验，于是准备转vs code，之前还犹豫是否有公式预览功能，看了LaTexworkshop的官方文档后，发现其实是有公式的预览功能的，于是决定转vs code&lt;/p&gt;</summary>
    
    
    
    <category term="latex" scheme="https://www.zhufengblog.com/categories/latex/"/>
    
    
    <category term="latex配置" scheme="https://www.zhufengblog.com/tags/latex%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib入门</title>
    <link href="https://www.zhufengblog.com/2021/02/11/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97-matplotlib%E5%85%A5%E9%97%A8/"/>
    <id>https://www.zhufengblog.com/2021/02/11/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97-matplotlib%E5%85%A5%E9%97%A8/</id>
    <published>2021-02-11T14:09:50.000Z</published>
    <updated>2021-02-23T13:55:17.433Z</updated>
    
    <content type="html"><![CDATA[<p>matplotlib在是python中的绘图库，现在的建模比赛以及科研都用上了python，我也学了一点点入门的操作，下面讲的就是我总结的一些内容，希望可以帮助到没有入门的同学，大佬看到这篇文章不要见笑！！！</p><span id="more"></span><h2 id="关键：">关键：</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">*</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span>xmin<span class="token punctuation">,</span> xmax<span class="token punctuation">,</span> ymin<span class="token punctuation">,</span> ymax<span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>setp<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">lines <span class="token operator">=</span> plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token comment"># 使用键值对</span>plt<span class="token punctuation">.</span>setp<span class="token punctuation">(</span>lines<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2.0</span><span class="token punctuation">)</span><span class="token comment"># 或者使用 MATLAB 风格的字符串对</span>plt<span class="token punctuation">.</span>setp<span class="token punctuation">(</span>lines<span class="token punctuation">,</span> <span class="token string">'color'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'linewidth'</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h2 id="如何在一张图中画多个函数图像">如何在一张图中画多个函数图像</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>t<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">*</span>t<span class="token punctuation">)</span>t1 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">5.0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>t2 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">5.0</span><span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">211</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t1<span class="token punctuation">,</span> f<span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'bo'</span><span class="token punctuation">,</span> t2<span class="token punctuation">,</span> f<span class="token punctuation">(</span>t2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'k'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t2<span class="token punctuation">,</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">*</span>t2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'r--'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://i.loli.net/2021/02/12/Kh9LdvcOnmXPMz6.png" alt=""></p><p><strong>例子:</strong></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span>x1<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>x2<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>y2<span class="token operator">=</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">211</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x1<span class="token punctuation">,</span>f<span class="token punctuation">(</span>x1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'bo'</span><span class="token punctuation">,</span>x2<span class="token punctuation">,</span>f<span class="token punctuation">(</span>x2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'k'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y2<span class="token punctuation">,</span><span class="token string">'r--'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://i.loli.net/2021/02/12/1idZW7lfL6CSMQz.png" alt=""></p><p>可以添加的一些设置：</p><pre class="language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># plt.axis([xmin, xmax, ymin, ymax])</span>plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token string">r'$y=\sin(x^2)$'</span><span class="token punctuation">)</span><span class="token comment">#  图标，前面是方文字的坐标</span>plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment">#是否有网格</span></code></pre><p>另外的注释方法：</p><pre class="language-python" data-language="python"><code class="language-python">ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>t <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">5.0</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>s <span class="token operator">=</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">*</span>t<span class="token punctuation">)</span>line<span class="token punctuation">,</span> <span class="token operator">=</span> plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t<span class="token punctuation">,</span> s<span class="token punctuation">,</span> lw<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span><span class="token string">'local max'</span><span class="token punctuation">,</span> xy<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xytext<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            arrowprops<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>facecolor<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">,</span> shrink<span class="token operator">=</span><span class="token number">0.05</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>效果：</p><p><img src="https://i.loli.net/2021/02/12/IV6R5TQm7rjDdgf.png" alt=""></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: gbk -*-</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>pylab <span class="token keyword">import</span> mplmpl<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.family'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'SimHei'</span><span class="token comment"># 指定默认字体</span>mpl<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span> <span class="token comment"># 解决保存图像是负号'-'显示为方块的问题</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>axs1<span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>axs2<span class="token operator">=</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>x<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">"x轴"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">"y轴"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>sca<span class="token punctuation">(</span>axs1<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>sca<span class="token punctuation">(</span>axs2<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>x<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;matplotlib在是python中的绘图库，现在的建模比赛以及科研都用上了python，我也学了一点点入门的操作，下面讲的就是我总结的一些内容，希望可以帮助到没有入门的同学，大佬看到这篇文章不要见笑！！！&lt;/p&gt;</summary>
    
    
    
    <category term="python科学计算" scheme="https://www.zhufengblog.com/categories/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="matplotlib绘图" scheme="https://www.zhufengblog.com/tags/matplotlib%E7%BB%98%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>符号计算</title>
    <link href="https://www.zhufengblog.com/2021/02/11/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97-%E7%AC%A6%E5%8F%B7%E8%AE%A1%E7%AE%97/"/>
    <id>https://www.zhufengblog.com/2021/02/11/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97-%E7%AC%A6%E5%8F%B7%E8%AE%A1%E7%AE%97/</id>
    <published>2021-02-11T14:09:50.000Z</published>
    <updated>2021-02-23T13:59:11.581Z</updated>
    
    <content type="html"><![CDATA[<h1>sympy库的简单运用</h1><h2 id="泰勒展开">泰勒展开</h2><p>例子：<br>首先我们对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">e^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span>进行以下方法得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mrow><mi>i</mi><mi>x</mi></mrow></msup><mo>=</mo><mi>cos</mi><mo>⁡</mo><mi>x</mi><mo>+</mo><mi>i</mi><mi>sin</mi><mo>⁡</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">e^{ix}=\cos x+i\sin x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66786em;vertical-align:0em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span></span></span></span>，（欧拉公式）</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> sympy <span class="token keyword">import</span> <span class="token operator">*</span>x <span class="token operator">=</span>symbols<span class="token punctuation">(</span><span class="token string">"x"</span><span class="token punctuation">,</span>real <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>tend <span class="token operator">=</span> expand<span class="token punctuation">(</span>exp<span class="token punctuation">(</span>I<span class="token operator">*</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">complex</span> <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>tend</code></pre><span id="more"></span><p>但是我们需要的是级数的形式，即：</p><!-- $$\begin{align*}e^{x}&=1+x+\frac{x^2}{2!}+\cdots+\frac{x^n}{n!}\\e^{ix}&=1+ix+\frac{(ix)^2}{2!}+\cdots+\frac{(ix)^n}{n!}\end{align*}$$ --> <div align="center"><img style="background: white;" src="https://latex.codecogs.com/svg.latex?%5Cbegin%7Balign*%7D%0Ae%5E%7Bx%7D%26%3D1%2Bx%2B%5Cfrac%7Bx%5E2%7D%7B2!%7D%2B%5Ccdots%2B%5Cfrac%7Bx%5En%7D%7Bn!%7D%5C%5C%0Ae%5E%7Bix%7D%26%3D1%2Bix%2B%5Cfrac%7B(ix)%5E2%7D%7B2!%7D%2B%5Ccdots%2B%5Cfrac%7B(ix)%5En%7D%7Bn!%7D%0A%5Cend%7Balign*%7D"></div><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> sympy <span class="token keyword">import</span> <span class="token operator">*</span>x <span class="token operator">=</span> symbols<span class="token punctuation">(</span><span class="token string">"x"</span><span class="token punctuation">,</span>real <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>tend <span class="token operator">=</span> series<span class="token punctuation">(</span>exp<span class="token punctuation">(</span>I<span class="token operator">*</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>tend</code></pre><p>之后对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>cos</mi><mo>⁡</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\cos x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sin</mi><mo>⁡</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\sin x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66786em;vertical-align:0em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span></span></span></span>的展开也是仿照这种形式，最后可以证明得到欧拉公式。</p><h2 id="证明球体的体积">证明球体的体积</h2><p>我们这里使用的是球的切片法来求体积，具体可以参照:</p><!-- $$V=2 \int_{0}^{R} \pi r^{2} dx =2 \int_{0}^{R} \pi (R^2- x^2)dx=\frac{4\pi R^2}{3}$$ --> <div align="center"><img style="background: white;" src="https://latex.codecogs.com/svg.latex?V%3D2%20%5Cint_%7B0%7D%5E%7BR%7D%20%5Cpi%20r%5E%7B2%7D%20dx%20%3D2%20%5Cint_%7B0%7D%5E%7BR%7D%20%5Cpi%20(R%5E2-%20x%5E2)dx%3D%5Cfrac%7B4%5Cpi%20R%5E2%7D%7B3%7D"></div><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> sympy <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#这个positive=true相当重要，正整数</span>r<span class="token operator">=</span>symbols<span class="token punctuation">(</span><span class="token string">'r'</span><span class="token punctuation">,</span>positive<span class="token operator">=</span>true<span class="token punctuation">)</span>x<span class="token punctuation">,</span>y<span class="token operator">=</span>symbols<span class="token punctuation">(</span><span class="token string">'x,y'</span><span class="token punctuation">)</span>circle<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>integrate<span class="token punctuation">(</span>sqrt<span class="token punctuation">(</span>r<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token operator">-</span>r<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># .subs(原始对象，需要交换的对象)</span>circle_x<span class="token operator">=</span>circle<span class="token punctuation">.</span>subs<span class="token punctuation">(</span>r<span class="token punctuation">,</span>sqrt<span class="token punctuation">(</span>r<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>v<span class="token operator">=</span>integrate<span class="token punctuation">(</span>circle_x<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token operator">-</span>r<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span>v</code></pre><h2 id="数值微分">数值微分</h2><p>对于数值求导和符号求导的区别：<a href="https://zhuanlan.zhihu.com/p/109755675">可以看这个链接</a></p><p>在计算之前需要定义给出的符号是什么类型的数据</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> sympy <span class="token keyword">import</span> <span class="token operator">*</span>x<span class="token operator">=</span>symbols<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span>real<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>h<span class="token operator">=</span>symbols<span class="token punctuation">(</span><span class="token string">'h'</span><span class="token punctuation">,</span>positive<span class="token operator">=</span>true<span class="token punctuation">)</span><span class="token comment"># cls指的是f是一个函数的符号</span>f<span class="token operator">=</span>symbols<span class="token punctuation">(</span><span class="token string">'f'</span><span class="token punctuation">,</span>cls<span class="token operator">=</span>Function<span class="token punctuation">)</span>diff_1<span class="token operator">=</span>f<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>diff<span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>diff_2<span class="token operator">=</span>as_finite_diff<span class="token punctuation">(</span>diff_1<span class="token punctuation">,</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span>x<span class="token operator">+</span>h<span class="token punctuation">]</span><span class="token punctuation">)</span>diff_2</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1&gt;sympy库的简单运用&lt;/h1&gt;
&lt;h2 id=&quot;泰勒展开&quot;&gt;泰勒展开&lt;/h2&gt;
&lt;p&gt;例子：&lt;br&gt;
首先我们对&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;e^x&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.664392em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.664392em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;进行以下方法得到&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;cos&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;sin&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;e^{ix}=\cos x+i\sin x&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.824664em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.824664em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.66666em;vertical-align:-0.08333em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mop&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.66786em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mop&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，（欧拉公式）&lt;/p&gt;
&lt;pre class=&quot;language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; sympy &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;
x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;symbols&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;x&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;real &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
tend &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; expand&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;exp&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;I&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;complex&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
tend&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="python科学计算" scheme="https://www.zhufengblog.com/categories/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="sympy库" scheme="https://www.zhufengblog.com/tags/sympy%E5%BA%93/"/>
    
  </entry>
  
</feed>
